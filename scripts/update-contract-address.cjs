#!/usr/bin/env node
const fs = require("fs");
const path = require("path");

// –ß–∏—Ç–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const chainId = args[0];
const contractAddress = args[1];

if (!chainId || !contractAddress) {
  console.error(
    "‚ùå Usage: node update-contract-address.cjs <chainId> <contractAddress>"
  );
  console.error(
    "   Example: node update-contract-address.cjs 80002 0x1234567890123456789012345678901234567890"
  );
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥—Ä–µ—Å –≤–∞–ª–∏–¥–Ω—ã–π
if (!contractAddress.startsWith("0x") || contractAddress.length !== 42) {
  console.error(
    "‚ùå Invalid contract address format. Must start with 0x and be 42 characters long."
  );
  process.exit(1);
}

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É useContracts.ts
const contractsFilePath = path.join(__dirname, "../src/hooks/useContracts.ts");

try {
  // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
  let fileContent = fs.readFileSync(contractsFilePath, "utf8");

  // –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ chainId
  const regex = new RegExp(
    `(${chainId}:\\s*{[\\s\\S]*?SmartRent:\\s*")([^"]*)(")`,
    "g"
  );

  if (!fileContent.match(regex)) {
    console.error(`‚ùå Could not find chainId ${chainId} in CONTRACT_ADDRESSES`);
    process.exit(1);
  }

  fileContent = fileContent.replace(regex, `$1${contractAddress}$3`);

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  fs.writeFileSync(contractsFilePath, fileContent, "utf8");

  console.log("‚úÖ Contract address updated successfully!");
  console.log(`   Chain ID: ${chainId}`);
  console.log(`   Address: ${contractAddress}`);
  console.log(`   File: ${contractsFilePath}`);

  // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
  const envPath = path.join(__dirname, "../.env");
  let envContent = "";

  if (fs.existsSync(envPath)) {
    envContent = fs.readFileSync(envPath, "utf8");
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º VITE_SMARTRENT_ADDRESS
  const viteAddressRegex = /VITE_SMARTRENT_ADDRESS=.*/;
  if (envContent.match(viteAddressRegex)) {
    envContent = envContent.replace(
      viteAddressRegex,
      `VITE_SMARTRENT_ADDRESS=${contractAddress}`
    );
  } else {
    envContent += `\nVITE_SMARTRENT_ADDRESS=${contractAddress}\n`;
  }

  fs.writeFileSync(envPath, envContent, "utf8");
  console.log("‚úÖ .env file updated!");

  console.log("\nüéâ All done! You can now run: npm run dev");
} catch (error) {
  console.error("‚ùå Error updating contract address:", error.message);
  process.exit(1);
}
