import React, { useState } from 'react';
import { X, Calendar, DollarSign, FileText, Send, User, Mail, Phone, MessageSquare } from 'lucide-react';
import { useContracts } from '../hooks/useContracts';
import { useWeb3 } from '../hooks/useWeb3';
import './RentalApplicationModal.css';

interface RentalApplicationModalProps {
  isOpen: boolean;
  onClose: () => void;
  listing: any;
  onSuccess?: () => void;
}

export const RentalApplicationModal: React.FC<RentalApplicationModalProps> = ({
  isOpen,
  onClose,
  listing,
  onSuccess,
}) => {
  const { createRental } = useContracts();
  const { account, isConnected } = useWeb3();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏
  const [formData, setFormData] = useState({
    startDate: '',
    endDate: '',
    message: '',
    fullName: '',
    email: '',
    phone: '',
  });

  if (!isOpen || !listing) return null;

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const calculateTotalCost = () => {
    if (!formData.startDate || !formData.endDate) return { days: 0, totalRent: 0, deposit: 0 };

    const start = new Date(formData.startDate).getTime();
    const end = new Date(formData.endDate).getTime();
    const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24));
    
    if (days <= 0) return { days: 0, totalRent: 0, deposit: 0 };

    const pricePerDay = parseFloat(listing.pricePerDay || '0');
    const deposit = parseFloat(listing.deposit || '0');
    const totalRent = days * pricePerDay;

    return { days, totalRent, deposit };
  };

  const { days, totalRent, deposit } = calculateTotalCost();
  const totalCost = totalRent + deposit;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!isConnected || !account) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫');
      return;
    }

    if (!formData.startDate || !formData.endDate) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã –∞—Ä–µ–Ω–¥—ã');
      return;
    }

    if (days <= 0) {
      setError('–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞');
      return;
    }

    if (!formData.fullName || !formData.email || !formData.phone) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      return;
    }

    setIsSubmitting(true);
    setError(null);

    try {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ timestamp (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –Ω–µ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Date.UTC —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏
      const startDate = new Date(formData.startDate + 'T00:00:00Z');
      const endDate = new Date(formData.endDate + 'T23:59:59Z');
      
      const startTimestamp = Math.floor(startDate.getTime() / 1000);
      const endTimestamp = Math.floor(endDate.getTime() / 1000);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –¥–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
      const now = Math.floor(Date.now() / 1000);
      if (startTimestamp <= now) {
        throw new Error('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–µ —Ä–∞–Ω–µ–µ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è.');
      }
      
      if (endTimestamp <= startTimestamp) {
        throw new Error('–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞');
      }
      
      console.log('üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã —Å –¥–∞—Ç–∞–º–∏:', {
        startDate: formData.startDate,
        endDate: formData.endDate,
        startTimestamp,
        endTimestamp,
        currentTimestamp: now
      });

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞—Ä–µ–Ω–¥—ã –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ
      await createRental(
        listing.listingId,
        listing.landlord,
        deposit.toString(),
        totalRent.toString(),
        startTimestamp,
        endTimestamp
      );

      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      // –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

      console.log('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', {
        ...formData,
        listingId: listing.listingId,
        totalCost,
        days,
      });

      onSuccess?.();
      onClose();
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏:', error);
      setError(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div 
        className="modal-content modal-large" 
        onClick={(e) => e.stopPropagation()}
        style={{ maxWidth: '700px' }}
      >
        {/* Header */}
        <div className="modal-header">
          <div>
            <h2 style={{ marginBottom: '4px' }}>–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞—Ä–µ–Ω–¥—É</h2>
            <p style={{ 
              fontSize: 'var(--font-size-sm)', 
              color: 'var(--color-text-secondary)',
              fontWeight: 'normal'
            }}>
              {listing.title}
            </p>
          </div>
          <button onClick={onClose} className="modal-close" disabled={isSubmitting}>
            <X />
          </button>
        </div>

        {/* Body */}
        <div className="modal-body">
          <form onSubmit={handleSubmit}>
            {/* Listing Info */}
            <div className="info-card" style={{ marginBottom: 'var(--spacing-lg)' }}>
              <div className="info-row">
                <div className="info-item">
                  <DollarSign style={{ width: '18px', height: '18px', color: 'var(--color-primary)' }} />
                  <div>
                    <div className="info-label">–¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å</div>
                    <div className="info-value">{listing.pricePerDay} MATIC</div>
                  </div>
                </div>
                <div className="info-item">
                  <DollarSign style={{ width: '18px', height: '18px', color: 'var(--color-warning)' }} />
                  <div>
                    <div className="info-label">–î–µ–ø–æ–∑–∏—Ç</div>
                    <div className="info-value">{listing.deposit} MATIC</div>
                  </div>
                </div>
                <div className="info-item">
                  <User style={{ width: '18px', height: '18px', color: 'var(--color-text-secondary)' }} />
                  <div>
                    <div className="info-label">–ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å</div>
                    <div className="info-value" style={{ fontSize: 'var(--font-size-sm)' }}>
                      {listing.landlord.slice(0, 8)}...{listing.landlord.slice(-6)}
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Dates */}
            <div style={{ marginBottom: 'var(--spacing-lg)' }}>
              <label className="form-label" style={{ marginBottom: 'var(--spacing-md)' }}>
                <Calendar style={{ width: '16px', height: '16px' }} />
                –ü–µ—Ä–∏–æ–¥ –∞—Ä–µ–Ω–¥—ã
              </label>
              <div className="date-inputs">
                <div style={{ flex: 1 }}>
                  <label className="form-label-small">–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞</label>
                  <input
                    type="date"
                    name="startDate"
                    value={formData.startDate}
                    onChange={handleChange}
                    min={new Date(Date.now() + 86400000).toISOString().split('T')[0]}
                    className="form-input"
                    required
                    title="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–Ω–µ —Ä–∞–Ω–µ–µ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è)"
                  />
                </div>
                <div style={{ flex: 1 }}>
                  <label className="form-label-small">–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞</label>
                  <input
                    type="date"
                    name="endDate"
                    value={formData.endDate}
                    onChange={handleChange}
                    min={formData.startDate || new Date().toISOString().split('T')[0]}
                    className="form-input"
                    required
                  />
                </div>
              </div>
            </div>

            {/* Cost Calculation */}
            {days > 0 && (
              <div className="cost-summary" style={{ marginBottom: 'var(--spacing-lg)' }}>
                <div className="cost-row">
                  <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:</span>
                  <strong>{days} –¥–Ω–µ–π</strong>
                </div>
                <div className="cost-row">
                  <span>–ê—Ä–µ–Ω–¥–∞ ({listing.pricePerDay} MATIC √ó {days}):</span>
                  <strong>{totalRent.toFixed(2)} MATIC</strong>
                </div>
                <div className="cost-row">
                  <span>–î–µ–ø–æ–∑–∏—Ç:</span>
                  <strong>{deposit.toFixed(2)} MATIC</strong>
                </div>
                <div className="cost-row total">
                  <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
                  <strong className="total-amount">{totalCost.toFixed(2)} MATIC</strong>
                </div>
              </div>
            )}

            {/* Contact Information */}
            <div style={{ marginBottom: 'var(--spacing-lg)' }}>
              <label className="form-label" style={{ marginBottom: 'var(--spacing-md)' }}>
                <User style={{ width: '16px', height: '16px' }} />
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </label>
              <div style={{ display: 'grid', gap: 'var(--spacing-md)' }}>
                <div>
                  <label className="form-label-small">–ü–æ–ª–Ω–æ–µ –∏–º—è</label>
                  <input
                    type="text"
                    name="fullName"
                    value={formData.fullName}
                    onChange={handleChange}
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                    className="form-input"
                    required
                  />
                </div>
                <div className="contact-grid">
                  <div>
                    <label className="form-label-small">Email</label>
                    <div style={{ position: 'relative' }}>
                      <Mail style={{
                        position: 'absolute',
                        left: '12px',
                        top: '50%',
                        transform: 'translateY(-50%)',
                        width: '18px',
                        height: '18px',
                        color: 'var(--color-text-muted)'
                      }} />
                      <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        placeholder="your@email.com"
                        className="form-input"
                        style={{ paddingLeft: '40px' }}
                        required
                      />
                    </div>
                  </div>
                  <div>
                    <label className="form-label-small">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                    <div style={{ position: 'relative' }}>
                      <Phone style={{
                        position: 'absolute',
                        left: '12px',
                        top: '50%',
                        transform: 'translateY(-50%)',
                        width: '18px',
                        height: '18px',
                        color: 'var(--color-text-muted)'
                      }} />
                      <input
                        type="tel"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                        placeholder="+7 (999) 123-45-67"
                        className="form-input"
                        style={{ paddingLeft: '40px' }}
                        required
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Message */}
            <div style={{ marginBottom: 'var(--spacing-lg)' }}>
              <label className="form-label" style={{ marginBottom: 'var(--spacing-md)' }}>
                <MessageSquare style={{ width: '16px', height: '16px' }} />
                –°–æ–æ–±—â–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—é (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
              </label>
              <textarea
                name="message"
                value={formData.message}
                onChange={handleChange}
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, —Ü–µ–ª–∏ –∞—Ä–µ–Ω–¥—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö..."
                className="form-textarea"
                rows={4}
                style={{ resize: 'vertical' }}
              />
            </div>

            {/* Info Box */}
            <div className="info-box" style={{ marginBottom: 'var(--spacing-lg)' }}>
              <FileText style={{ width: '20px', height: '20px', flexShrink: 0 }} />
              <div style={{ fontSize: 'var(--font-size-sm)' }}>
                <strong>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong>
                <ol style={{ margin: '8px 0 0 0', paddingLeft: '20px' }}>
                  <li>–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –∑–∞—è–≤–∫—É —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</li>
                  <li>–ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É</li>
                  <li>–ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç</li>
                  <li>–í—ã –≤–Ω–æ—Å–∏—Ç–µ –¥–µ–ø–æ–∑–∏—Ç –∏ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ MetaMask</li>
                  <li>–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –æ–±—ä–µ–∫—Ç—É</li>
                </ol>
              </div>
            </div>

            {/* Error */}
            {error && (
              <div className="alert alert-error" style={{ marginBottom: 'var(--spacing-lg)' }}>
                {error}
              </div>
            )}

            {/* Wallet Warning */}
            {!isConnected && (
              <div className="alert alert-warning" style={{ marginBottom: 'var(--spacing-lg)' }}>
                –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
              </div>
            )}
          </form>
        </div>

        {/* Footer */}
        <div className="modal-footer">
          <button
            type="button"
            onClick={onClose}
            className="btn btn-secondary"
            disabled={isSubmitting}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            type="submit"
            onClick={handleSubmit}
            className="btn btn-primary"
            disabled={!isConnected || isSubmitting || days <= 0}
          >
            {isSubmitting ? (
              <>
                <div className="spinner-small" />
                –û—Ç–ø—Ä–∞–≤–∫–∞...
              </>
            ) : (
              <>
                <Send style={{ width: '18px', height: '18px' }} />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </>
            )}
          </button>
        </div>
      </div>
    </div>
  );
};

